Identifiers in Hibernate represent the primary key of an entity. This implies the values are unique so that they can identify a specific entity, that they aren't null and that they won't be modified.

i -> The most straightforward way to define an identifier is by using the @Id annotation.

@Entity
public class Student {

    @Id
    private long studentId;
   
}

Default @GeneratedValue is AUTO
If we want to automatically generate the primary key value, we can add the @GeneratedValue annotation.

This can use four generation types: AUTO, IDENTITY, SEQUENCE and TABLE.

If we don't explicitly specify a value, the generation type defaults to AUTO.

1 -> Auto generation

 numeric values, the generation is based on a sequence or table generator, while UUID values will use the UUIDGenerator.

 @Entity
public class Student {

    @Id
    @GeneratedValue
    private long studentId;

    // ...
}

// using UUID Generator 

@Entity
public class Course {

    @Id
    @GeneratedValue
    private UUID courseId;

    // ...
}

2 -> Identity Generation 
Identity generation relies on the IdentityGenerator, which expects values generated by an identity column in the database. This means they are auto-incremented.

@Entity
public class Student {

    @Id
    @GeneratedValue (strategy = GenerationType.IDENTITY)
    private long studentId;

    // ...
}